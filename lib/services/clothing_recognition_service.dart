import 'dart:typed_data';
import 'package:camera/camera.dart';
import 'package:google_ml_kit/google_ml_kit.dart';
import 'package:image/image.dart' as img;

class ClothingRecognitionService {
  final ObjectDetector _objectDetector = GoogleMlKit.vision.objectDetector();
  final ImageLabeler _imageLabeler = GoogleMlKit.vision.imageLabeler();
  
  // –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –æ–¥–µ–∂–¥—ã –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
  static const List<String> _clothingCategories = [
    'shirt', 't-shirt', 'blouse', 'sweater', 'jacket', 'coat',
    'pants', 'jeans', 'shorts', 'skirt', 'dress',
    'shoes', 'boots', 'sneakers', 'sandals',
    'hat', 'cap', 'scarf', 'gloves',
    'socks', 'underwear', 'bra', 'tank top'
  ];

  // –ú–∞–ø–ø–∏–Ω–≥ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–∞ –∏–∫–æ–Ω–∫–∏
  static const Map<String, String> _categoryIcons = {
    'shirt': 'üëî',
    't-shirt': 'üëï',
    'blouse': 'üëö',
    'sweater': 'üß•',
    'jacket': 'üß•',
    'coat': 'üß•',
    'pants': 'üëñ',
    'jeans': 'üëñ',
    'shorts': 'ü©≥',
    'skirt': 'üëó',
    'dress': 'üëó',
    'shoes': 'üëü',
    'boots': 'üë¢',
    'sneakers': 'üëü',
    'sandals': 'ü©¥',
    'hat': 'üé©',
    'cap': 'üß¢',
    'scarf': 'üß£',
    'gloves': 'üß§',
    'socks': 'üß¶',
    'underwear': 'ü©≤',
    'bra': 'üëô',
    'tank top': 'üéΩ',
  };

  // –ú–∞–ø–ø–∏–Ω–≥ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–∞ —Ä—É—Å—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è
  static const Map<String, String> _categoryNames = {
    'shirt': '–†—É–±–∞—à–∫–∞',
    't-shirt': '–§—É—Ç–±–æ–ª–∫–∞',
    'blouse': '–ë–ª—É–∑–∫–∞',
    'sweater': '–°–≤–∏—Ç–µ—Ä',
    'jacket': '–ö—É—Ä—Ç–∫–∞',
    'coat': '–ü–∞–ª—å—Ç–æ',
    'pants': '–ë—Ä—é–∫–∏',
    'jeans': '–î–∂–∏–Ω—Å—ã',
    'shorts': '–®–æ—Ä—Ç—ã',
    'skirt': '–Æ–±–∫–∞',
    'dress': '–ü–ª–∞—Ç—å–µ',
    'shoes': '–û–±—É–≤—å',
    'boots': '–°–∞–ø–æ–≥–∏',
    'sneakers': '–ö—Ä–æ—Å—Å–æ–≤–∫–∏',
    'sandals': '–°–∞–Ω–¥–∞–ª–∏–∏',
    'hat': '–®–ª—è–ø–∞',
    'cap': '–ö–µ–ø–∫–∞',
    'scarf': '–®–∞—Ä—Ñ',
    'gloves': '–ü–µ—Ä—á–∞—Ç–∫–∏',
    'socks': '–ù–æ—Å–∫–∏',
    'underwear': '–ù–∏–∂–Ω–µ–µ –±–µ–ª—å–µ',
    'bra': '–ë—é—Å—Ç–≥–∞–ª—å—Ç–µ—Ä',
    'tank top': '–ú–∞–π–∫–∞',
  };

  Future<List<DetectedClothingItem>> detectClothing(CameraImage image) async {
    try {
      // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º CameraImage –≤ InputImage
      final inputImage = InputImage.fromBytes(
        bytes: _convertCameraImageToBytes(image),
        metadata: InputImageMetadata(
          size: Size(image.width.toDouble(), image.height.toDouble()),
          rotation: InputImageRotation.rotation0deg,
          format: InputImageFormat.bgra8888,
          bytesPerRow: image.planes[0].bytesPerRow,
        ),
      );

      // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤
      final objects = await _objectDetector.processImage(inputImage);
      
      // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      final labels = await _imageLabeler.processImage(inputImage);

      final List<DetectedClothingItem> detectedItems = [];

      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
      for (final object in objects) {
        final category = object.labels.firstOrNull?.text.toLowerCase();
        if (category != null && _clothingCategories.contains(category)) {
          detectedItems.add(DetectedClothingItem(
            name: _categoryNames[category] ?? category,
            category: category,
            icon: _categoryIcons[category] ?? 'üëï',
            confidence: object.labels.first.confidence,
            boundingBox: object.boundingBox,
          ));
        }
      }

      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏
      for (final label in labels) {
        final category = label.label.toLowerCase();
        if (_clothingCategories.contains(category)) {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –ª–∏ —É–∂–µ —ç—Ç–æ—Ç –ø—Ä–µ–¥–º–µ—Ç
          final existingItem = detectedItems.where((item) => item.category == category).firstOrNull;
          if (existingItem == null) {
            detectedItems.add(DetectedClothingItem(
              name: _categoryNames[category] ?? category,
              category: category,
              icon: _categoryIcons[category] ?? 'üëï',
              confidence: label.confidence,
              boundingBox: Rect.zero, // –î–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–µ—Ç bounding box
            ));
          }
        }
      }

      // –§–∏–ª—å—Ç—Ä—É–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã —Å –Ω–∏–∑–∫–æ–π —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é
      return detectedItems.where((item) => item.confidence > 0.3).toList();
    } catch (e) {
      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫
      return [];
    }
  }

  Uint8List _convertCameraImageToBytes(CameraImage image) {
    final WriteBuffer allBytes = WriteBuffer();
    for (final Plane plane in image.planes) {
      allBytes.putUint8List(plane.bytes);
    }
    return allBytes.done().buffer.asUint8List();
  }

  void dispose() {
    _objectDetector.close();
    _imageLabeler.close();
  }
}

class DetectedClothingItem {
  final String name;
  final String category;
  final String icon;
  final double confidence;
  final Rect boundingBox;

  DetectedClothingItem({
    required this.name,
    required this.category,
    required this.icon,
    required this.confidence,
    required this.boundingBox,
  });
} 